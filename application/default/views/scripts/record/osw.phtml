<?php 
    
$this->headLink()->appendStylesheet($this->baseUrl() . '/styles/osw.css');

$this->headScript()->appendFile($this->baseUrl() . '/scripts/osw.js');
$this->headScript()->appendFile($this->baseUrl() . '/scripts/includes.js');
$this->headScript()->appendFile($this->baseUrl() . '/scripts/customelements.js');

$auth = Zend_Auth::getInstance();
$identity = $auth->getIdentity();
$accesslevel = $identity[PeopleDAO::ACCESS_LEVEL];
$userid = $identity[PeopleDAO::PERSON_ID];

$title = "";
$tab = RecordNamespace::getRenderTab();
$oswid = 0;
$isbeingedited = 0;
$osw = RecordNamespace::getCurrentOSW();
if (isset($osw))
{
	$oswid = $osw->getOSWID();
	if (is_null($oswid))
	{
		$oswid = 0;
		$title = "New OSW Record";
	}
	else 
	{
		$title = "OSW Record #" . $oswid;
	}
	if (!$osw->isEditable())
	{
		$isbeingedited = 1;
	}
}
else 
{
	$title = "New OSW Record";
}

//If this is a record view, then display the record number as the title
//Otherwise display the action as the title
$request = Zend_Controller_Front::getInstance()->getRequest();
if ($request->getActionName() == "osw")
{
	$this->headTitle($title);
}
else 
{
	$this->headTitle($request->getActionName())
     	->headTitle($request->getControllerName());
}

$savestatus = RecordNamespace::getSaveStatus();
RecordNamespace::setSaveStatus(RecordNamespace::SAVE_STATE_IDLE);

$statusmessage = RecordNamespace::getStatusMessage();
RecordNamespace::setStatusMessage(RecordNamespace::DEFAULT_STATUS_MESSAGE);

$this->placeholder('body')->set('class="yui-skin-sam" onload="displaySaveStatus(\'' . $savestatus . '\'); initButtons(\'' . $accesslevel . '\', \'' . $userid . '\', \'' . $oswid . '\', \'' . $isbeingedited . '\'); initTabViewBrowserHistory(\'' . $tab . '\'); initCheckingForModifications();" onunload="clearEdits(\'' . $oswid . '\')" onbeforeunload="return checkForModifications()"');
?>

<style type="text/css">
#yui-history-iframe {
  position:absolute;
  top:0; left:0;
  width:1px; height:1px; /* avoid scrollbars */
  visibility:hidden;
}

</style>


<!-- Static markup required for browser history management. Note that these
     could be created using document.write in a script block. But they have
     to be created while the page is being parsed, so it cannot be done
     from an imported script file. Also, these have to be created as early
     as possible to avoid problems on Internet Explorer.
     Note that "magic URLs" such as:

         javascript:document.open();document.write(new Date().getTime());document.close();

     and such do NOT work on IE6! Only a real document works (that "real
     document" does not need to be an HTML document. It can be an image
     as well. Using an asset that you use somewhere else on your site,
     instead of a separate asset avoids an unnecessary server round trip.
     Finally, note that the iframe is only used on Internet Explorer.
     If this page is server generated (by a PHP script for example), it is
     a good idea to create the IFrame ONLY for Internet Explorer (use
     server side user agent sniffing) -->
<iframe id="yui-history-iframe" src="<?php echo $this->baseUrl()?>/assets/blank.html"></iframe>
<input id="yui-history-field" type="hidden">

<div id="recordinfo">
	<h1 class="recordtitle"><?php echo $this->placeholder("recordnumber")?></h1>
	<div id="statusdiv">Your record has been saved!</div>
</div>

<div id="oswcontent">

<!-- Static markup required for the TabView widget. -->

<div id="demo" class="yui-navset yui-navset-top">
  <ul class="yui-nav">
    <li title="active" class="selected"><a href="#tab1"><em>OSW</em></a></li>
   	<li title="" class=""><a href="#tab2"><em>Files</em></a></li>
  </ul>
  <div class="yui-content">

    <div id="tab1"><?php echo $this->form->oswidentificationform ?></div>
    <div id="tab2"><?php echo $this->form->fileform ?></div>
    
  </div>
</div>
</div>

